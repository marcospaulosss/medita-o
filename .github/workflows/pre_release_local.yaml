name: Pre Release Local

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    permissions:
      checks: write
      contents: write
      packages: write
    runs-on: [ marcOS ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get previous tag
        id: prev_tag
        run: |
          # Get the latest tag matching the pattern v*.*.*
          latest_tag=$(git describe --tags --match "v[0-9]*" --abbrev=0 || echo "")
          echo "Latest tag: $latest_tag"
          echo "::set-output name=tag::$latest_tag"

      - name: Calculate next tag
        id: next_tag
        run: |
          # Extract the version numbers
          latest_tag=${{ steps.prev_tag.outputs.tag }}
          if [ -z "$latest_tag" ]; then
            next_tag="v1.0.0"
          else
            IFS='.' read -r -a version_parts <<< "${latest_tag//v/}"
            major=${version_parts[0]}
            minor=${version_parts[1]}
            patch=${version_parts[2]}
            # Increment the patch version
            next_tag="v$major.$minor.$((patch + 1))"
          fi
          echo "Next tag: $next_tag"
          echo "::set-output name=tag::$next_tag"

      - name: Get commit messages since previous tag
        id: commit_messages
        run: |
          latest_tag=${{ steps.prev_tag.outputs.tag }}
          if [ -z "$latest_tag" ]; then
            commits=$(git log --pretty=format:"- %s")
          else
            commits=$(git log $latest_tag..HEAD --pretty=format:"- %s")
          fi
          echo "Commits: $commits"
          echo "::set-output name=commits::$commits"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, você não precisa criar seu próprio token
        with:
          tag_name: ${{ steps.next_tag.outputs.tag }}
          release_name: ${{ steps.next_tag.outputs.tag }}
          body: |
            ### O que foi feito?
            ${{ steps.commit_messages.outputs.commits }}
          draft: true
          prerelease: true