fastlane_version "2.214.0"

default_platform :ios

platform :ios do

    before_all do
        setup_circle_ci
        app_store_connect_api_key(
          in_house: false,
          key_id: "4QX6T64C47",
          key_filepath: "./fastlane/AuthKey_4QX6T64C47.p8",
          issuer_id: "69a6de83-5f09-47e3-e053-5b8c7c11a4d1",
        )
    end

    lane :getTeamNames do
        require "spaceship" 
        clientTunes = Spaceship::Tunes.login(ENV["APPLE_ID"], ENV["FASTLANE_PASSWORD"])
        client = Spaceship::Portal.login(ENV["APPLE_ID"] ,ENV["FASTLANE_PASSWORD"])
      
        UI.message "* Developer Portal Team ID:"
        strDevPortal = "" 
        client.teams.each do |team|
            puts "#{team}
            UI.message "#{team['name']} (#{team['teamId']})"
            strDevPortal << "#{team['name']} (#{team['teamId']})||"
        end

        UI.message "* App Store Connect Team ID:"
        strClientTunes = "" 
        clientTunes.teams.each do |team|
            UI.message "#{team['contentProvider']['name']} (#{team['contentProvider']['contentProviderId']})"
            strClientTunes << "#{team['contentProvider']['name']} (#{team['contentProvider']['contentProviderId']})||"
        end 
    end
    
    lane :create_keys do
      match(type: "development", force_for_new_devices: true)
      match(type: "adhoc", force_for_new_devices: true)
      match(type: "appstore")
    end

    desc "Download keys"
    lane :download_keys do
      match(type: "development", readonly: true)
      match(type: "adhoc", readonly: true)
      match(type: "appstore", readonly: true)
    end

    desc "Build Ad Hoc"
    lane :buildAdHoc do

        if is_ci
            puts "Running on CI!"

            setup_ci(
                force: true
            )
        end

        match(type: "adhoc", readonly: true, git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'])

        cocoapods

        build_app(
            workspace: ENV["WORKSPACE"],
            scheme: ENV["SCHEME"],
            output_directory: "./build",
        )
    end

    desc "Build"
    lane :build do

        if is_ci
            puts "Running on CI!"

            setup_ci(
                force: true
            )
        end

        match(type: "appstore", readonly: true, git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'])

        cocoapods
        
        build_app(
            workspace: ENV["WORKSPACE"],
            scheme: ENV["SCHEME"],
            configuration: ENV["CONFIGURATION"],
            export_options: {
                provisioningProfiles: {
                  "eumedito.org.cincoMinutos.dev" => "Provisioning Profile Name Dev",
                }
            }
        )
    end
    
    desc "Deploy to Firebase Distribution"
    lane :firebase do

        incFirebase

        buildAdHoc

        # https://firebase.google.com/docs/app-distribution/ios/distribute-fastlane
        # bundle exec fastlane add_plugin firebase_app_distribution
        firebase_app_distribution(
            app: ENV["FIREBASE_APP_ID"],
            groups: ENV["FIREBASE_TEST_GROUP"],
            ipa_path: lane_context[SharedValues::IPA_OUTPUT_PATH],
            release_notes_file: "fastlane/release_notes.txt",
            firebase_cli_token: ENV['FIREBASE_TOKEN'],
        )
    end

    desc "Upload to Test Flight"
    lane :tf do

        inc
    
        build

        # https://docs.fastlane.tools/actions/upload_to_testflight
        upload_to_testflight(
            skip_waiting_for_build_processing: true,
            apple_id: ENV["APP_STORE_CONNECT_APPLE_ID"]
        )
    end

    desc "Upload to Test Flight - External"
    lane :tf_external do

        build

        # https://docs.fastlane.tools/actions/upload_to_testflight
        upload_to_testflight(
            changelog: "external!",
            distribute_external: true,
            notify_external_testers: true,
            groups: [
                "External"
            ],
        )
    end
    
    desc "Increment Build Number"
    lane :inc do
    
        increment_build_number({
          build_number: latest_testflight_build_number + 1
        })
    end

    desc "Increment Build Number Firebase"
    lane :incFirebase do

        increment_build_number({
          build_number: latest_testflight_build_number
        })
    end

    desc "delete created keychain"
    lane :delete_chain do
        delete_keychain(name: "fastlane_tmp_keychain-db")
    end
end