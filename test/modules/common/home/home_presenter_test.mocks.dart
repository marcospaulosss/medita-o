// Mocks generated by Mockito 5.4.4 from annotations
// in cinco_minutos_meditacao/test/modules/common/home/home_presenter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i9;

import 'package:auto_route/auto_route.dart' as _i13;
import 'package:cinco_minutos_meditacao/core/routers/app_router.dart' as _i12;
import 'package:cinco_minutos_meditacao/modules/common/screens/home/home_contract.dart'
    as _i14;
import 'package:cinco_minutos_meditacao/modules/common/screens/home/home_model.dart'
    as _i15;
import 'package:cinco_minutos_meditacao/modules/common/screens/home/home_repository.dart'
    as _i6;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/get_banners_response.dart'
    as _i11;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/meditations_response.dart'
    as _i10;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/user_response.dart'
    as _i7;
import 'package:cinco_minutos_meditacao/shared/models/error.dart' as _i8;
import 'package:cinco_minutos_meditacao/shared/services/auth_service.dart'
    as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);

  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<(_i5.AuthCredential?, Object?)> loginGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #loginGoogle,
          [],
        ),
        returnValue:
            _i4.Future<(_i5.AuthCredential?, Object?)>.value((null, null)),
      ) as _i4.Future<(_i5.AuthCredential?, Object?)>);

  @override
  _i4.Future<void> loginFacebook() => (super.noSuchMethod(
        Invocation.method(
          #loginFacebook,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Object?> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<Object?>.value(),
      ) as _i4.Future<Object?>);
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i6.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void sendOpenScreenEvent() => super.noSuchMethod(
        Invocation.method(
          #sendOpenScreenEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logOut() => super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<(_i7.UserResponse?, _i8.CustomError?)> requestUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUser,
          [],
        ),
        returnValue: _i4.Future<(_i7.UserResponse?, _i8.CustomError?)>.value(
            (null, null)),
      ) as _i4.Future<(_i7.UserResponse?, _i8.CustomError?)>);

  @override
  _i4.Future<_i8.CustomError?> uploadImageProfile(_i9.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImageProfile,
          [file],
        ),
        returnValue: _i4.Future<_i8.CustomError?>.value(),
      ) as _i4.Future<_i8.CustomError?>);

  @override
  _i4.Future<(_i10.MeditationsResponse?, _i8.CustomError?)>
      requestMeditations() => (super.noSuchMethod(
            Invocation.method(
              #requestMeditations,
              [],
            ),
            returnValue:
                _i4.Future<(_i10.MeditationsResponse?, _i8.CustomError?)>.value(
                    (null, null)),
          ) as _i4.Future<(_i10.MeditationsResponse?, _i8.CustomError?)>);

  @override
  _i4.Future<(_i11.GetBannersResponse?, _i8.CustomError?)> requestBanners() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestBanners,
          [],
        ),
        returnValue:
            _i4.Future<(_i11.GetBannersResponse?, _i8.CustomError?)>.value(
                (null, null)),
      ) as _i4.Future<(_i11.GetBannersResponse?, _i8.CustomError?)>);
}

/// A class which mocks [AppRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRouter extends _i1.Mock implements _i12.AppRouter {
  MockAppRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i13.AutoRoute> get routes => (super.noSuchMethod(
        Invocation.getter(#routes),
        returnValue: <_i13.AutoRoute>[],
      ) as List<_i13.AutoRoute>);

  @override
  void goToReplace(_i13.PageRouteInfo<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #goToReplace,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goTo(
    _i13.PageRouteInfo<dynamic>? route, {
    _i12.OnCloseRoute? onClose,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #goTo,
          [route],
          {#onClose: onClose},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HomeViewContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeViewContract extends _i1.Mock implements _i14.HomeViewContract {
  MockHomeViewContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showLoading() => super.noSuchMethod(
        Invocation.method(
          #showLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showNormalState(_i15.HomeModel? model) => super.noSuchMethod(
        Invocation.method(
          #showNormalState,
          [model],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showError(String? message) => super.noSuchMethod(
        Invocation.method(
          #showError,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}
