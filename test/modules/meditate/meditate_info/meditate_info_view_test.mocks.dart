// Mocks generated by Mockito 5.4.4 from annotations
// in cinco_minutos_meditacao/test/modules/meditate/meditate_info/meditate_info_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cinco_minutos_meditacao/modules/meditate/screens/meditate_info/meditate_info_contract.dart'
    as _i4;
import 'package:cinco_minutos_meditacao/modules/meditate/screens/meditate_info/meditate_info_model.dart'
    as _i2;
import 'package:cinco_minutos_meditacao/modules/meditate/screens/meditate_info/meditate_info_presenter.dart'
    as _i3;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/meditations_response.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMeditateInfoModel_0 extends _i1.SmartFake
    implements _i2.MeditateInfoModel {
  _FakeMeditateInfoModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MeditateInfoPresenter].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeditateInfoPresenter extends _i1.Mock
    implements _i3.MeditateInfoPresenter {
  MockMeditateInfoPresenter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set view(_i4.MeditateInfoViewContract? _view) => super.noSuchMethod(
        Invocation.setter(
          #view,
          _view,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get error => (super.noSuchMethod(
        Invocation.getter(#error),
        returnValue: false,
      ) as bool);

  @override
  set error(bool? _error) => super.noSuchMethod(
        Invocation.setter(
          #error,
          _error,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.MeditateInfoModel get meditateInfoModel => (super.noSuchMethod(
        Invocation.getter(#meditateInfoModel),
        returnValue: _FakeMeditateInfoModel_0(
          this,
          Invocation.getter(#meditateInfoModel),
        ),
      ) as _i2.MeditateInfoModel);

  @override
  set meditateInfoModel(_i2.MeditateInfoModel? _meditateInfoModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #meditateInfoModel,
          _meditateInfoModel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onOpenScreen() => super.noSuchMethod(
        Invocation.method(
          #onOpenScreen,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> initPresenter(_i2.MeditateInfoModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #initPresenter,
          [model],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateImageProfile() => (super.noSuchMethod(
        Invocation.method(
          #updateImageProfile,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i6.MeditationsResponse?> getMeditionsByUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMeditionsByUser,
          [],
        ),
        returnValue: _i5.Future<_i6.MeditationsResponse?>.value(),
      ) as _i5.Future<_i6.MeditationsResponse?>);
}
