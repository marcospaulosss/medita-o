// Mocks generated by Mockito 5.4.4 from annotations
// in cinco_minutos_meditacao/test/modules/meditate/meditate_info/meditate_info_presenter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i8;

import 'package:auto_route/auto_route.dart' as _i11;
import 'package:cinco_minutos_meditacao/core/routers/app_router.dart' as _i10;
import 'package:cinco_minutos_meditacao/modules/meditate/screens/meditate_info/meditate_info_contract.dart'
    as _i2;
import 'package:cinco_minutos_meditacao/modules/meditate/screens/meditate_info/meditate_info_model.dart'
    as _i3;
import 'package:cinco_minutos_meditacao/modules/meditate/screens/meditate_info/meditate_info_repository.dart'
    as _i4;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/meditations_response.dart'
    as _i9;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/user_response.dart'
    as _i6;
import 'package:cinco_minutos_meditacao/shared/models/error.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MeditateInfoViewContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeditateInfoViewContract extends _i1.Mock
    implements _i2.MeditateInfoViewContract {
  MockMeditateInfoViewContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showLoading() => super.noSuchMethod(
        Invocation.method(
          #showLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showNormalState({_i3.MeditateInfoModel? model}) => super.noSuchMethod(
        Invocation.method(
          #showNormalState,
          [],
          {#model: model},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showError(String? message) => super.noSuchMethod(
        Invocation.method(
          #showError,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MeditateInfoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeditateInfoRepository extends _i1.Mock
    implements _i4.MeditateInfoRepository {
  MockMeditateInfoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void sendOpenScreenEvent() => super.noSuchMethod(
        Invocation.method(
          #sendOpenScreenEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<(_i6.UserResponse?, _i7.CustomError?)> requestUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUser,
          [],
        ),
        returnValue: _i5.Future<(_i6.UserResponse?, _i7.CustomError?)>.value(
            (null, null)),
      ) as _i5.Future<(_i6.UserResponse?, _i7.CustomError?)>);

  @override
  _i5.Future<_i7.CustomError?> uploadImageProfile(_i8.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImageProfile,
          [file],
        ),
        returnValue: _i5.Future<_i7.CustomError?>.value(),
      ) as _i5.Future<_i7.CustomError?>);

  @override
  _i5.Future<(_i9.MeditationsResponse?, _i7.CustomError?)>
      requestMeditationsByUser() => (super.noSuchMethod(
            Invocation.method(
              #requestMeditationsByUser,
              [],
            ),
            returnValue:
                _i5.Future<(_i9.MeditationsResponse?, _i7.CustomError?)>.value(
                    (null, null)),
          ) as _i5.Future<(_i9.MeditationsResponse?, _i7.CustomError?)>);

  @override
  _i5.Future<(_i9.MeditationsResponse?, _i7.CustomError?)>
      requestMeditations() => (super.noSuchMethod(
            Invocation.method(
              #requestMeditations,
              [],
            ),
            returnValue:
                _i5.Future<(_i9.MeditationsResponse?, _i7.CustomError?)>.value(
                    (null, null)),
          ) as _i5.Future<(_i9.MeditationsResponse?, _i7.CustomError?)>);
}

/// A class which mocks [AppRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRouter extends _i1.Mock implements _i10.AppRouter {
  MockAppRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i11.AutoRoute> get routes => (super.noSuchMethod(
        Invocation.getter(#routes),
        returnValue: <_i11.AutoRoute>[],
      ) as List<_i11.AutoRoute>);

  @override
  void goToReplace(_i11.PageRouteInfo<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #goToReplace,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goTo(
    _i11.PageRouteInfo<dynamic>? route, {
    _i10.OnCloseRoute? onClose,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #goTo,
          [route],
          {#onClose: onClose},
        ),
        returnValueForMissingStub: null,
      );
}
