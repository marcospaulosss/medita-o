// Mocks generated by Mockito 5.4.4 from annotations
// in cinco_minutos_meditacao/test/modules/meditometer/screens/meditometer/meditometer_presenter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i7;

import 'package:auto_route/auto_route.dart' as _i9;
import 'package:cinco_minutos_meditacao/core/routers/app_router.dart' as _i8;
import 'package:cinco_minutos_meditacao/modules/meditometer/screens/meditometer/meditometer_contract.dart'
    as _i2;
import 'package:cinco_minutos_meditacao/modules/meditometer/screens/meditometer/meditometer_model.dart'
    as _i10;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/meditations_response.dart'
    as _i6;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/user_response.dart'
    as _i4;
import 'package:cinco_minutos_meditacao/shared/models/error.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i2.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void sendOpenScreenEvent() => super.noSuchMethod(
        Invocation.method(
          #sendOpenScreenEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<(_i4.UserResponse?, _i5.CustomError?)> requestUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUser,
          [],
        ),
        returnValue: _i3.Future<(_i4.UserResponse?, _i5.CustomError?)>.value(
            (null, null)),
      ) as _i3.Future<(_i4.UserResponse?, _i5.CustomError?)>);

  @override
  _i3.Future<(_i6.MeditationsResponse?, _i5.CustomError?)>
      requestMeditations() => (super.noSuchMethod(
            Invocation.method(
              #requestMeditations,
              [],
            ),
            returnValue:
                _i3.Future<(_i6.MeditationsResponse?, _i5.CustomError?)>.value(
                    (null, null)),
          ) as _i3.Future<(_i6.MeditationsResponse?, _i5.CustomError?)>);

  @override
  _i3.Future<_i5.CustomError?> uploadImageProfile(_i7.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImageProfile,
          [file],
        ),
        returnValue: _i3.Future<_i5.CustomError?>.value(),
      ) as _i3.Future<_i5.CustomError?>);
}

/// A class which mocks [AppRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRouter extends _i1.Mock implements _i8.AppRouter {
  MockAppRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i9.AutoRoute> get routes => (super.noSuchMethod(
        Invocation.getter(#routes),
        returnValue: <_i9.AutoRoute>[],
      ) as List<_i9.AutoRoute>);

  @override
  void goToReplace(_i9.PageRouteInfo<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #goToReplace,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goTo(
    _i9.PageRouteInfo<dynamic>? route, {
    _i8.OnCloseRoute? onClose,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #goTo,
          [route],
          {#onClose: onClose},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MeditometerViewContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeditometerViewContract extends _i1.Mock
    implements _i2.MeditometerViewContract {
  MockMeditometerViewContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showLoading() => super.noSuchMethod(
        Invocation.method(
          #showLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showNormalState(_i10.MeditometerModel? response) => super.noSuchMethod(
        Invocation.method(
          #showNormalState,
          [response],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showError(String? message) => super.noSuchMethod(
        Invocation.method(
          #showError,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}
