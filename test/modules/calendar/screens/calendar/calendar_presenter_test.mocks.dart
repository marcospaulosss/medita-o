// Mocks generated by Mockito 5.4.4 from annotations
// in cinco_minutos_meditacao/test/modules/calendar/screens/calendar/calendar_presenter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:io' as _i14;

import 'package:auto_route/auto_route.dart' as _i5;
import 'package:cinco_minutos_meditacao/core/routers/app_router.dart' as _i4;
import 'package:cinco_minutos_meditacao/modules/calendar/screens/calendar/calendar_contract.dart'
    as _i2;
import 'package:cinco_minutos_meditacao/modules/calendar/screens/calendar/calendar_model.dart'
    as _i3;
import 'package:cinco_minutos_meditacao/modules/calendar/screens/calendar/calendar_repository.dart'
    as _i11;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/meditations_response.dart'
    as _i6;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/month_calendar_response.dart'
    as _i9;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/user_response.dart'
    as _i7;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/week_calendar_response.dart'
    as _i8;
import 'package:cinco_minutos_meditacao/shared/clients/models/responses/year_calendar_response.dart'
    as _i10;
import 'package:cinco_minutos_meditacao/shared/models/error.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CalendarViewContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarViewContract extends _i1.Mock
    implements _i2.CalendarViewContract {
  MockCalendarViewContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showLoading() => super.noSuchMethod(
        Invocation.method(
          #showLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showNormalState(_i3.CalendarModel? response) => super.noSuchMethod(
        Invocation.method(
          #showNormalState,
          [response],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showError(String? message) => super.noSuchMethod(
        Invocation.method(
          #showError,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRouter extends _i1.Mock implements _i4.AppRouter {
  MockAppRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.AutoRoute> get routes => (super.noSuchMethod(
        Invocation.getter(#routes),
        returnValue: <_i5.AutoRoute>[],
      ) as List<_i5.AutoRoute>);

  @override
  void goToReplace(_i5.PageRouteInfo<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #goToReplace,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goTo(
    _i5.PageRouteInfo<dynamic>? route, {
    _i4.OnCloseRoute? onClose,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #goTo,
          [route],
          {#onClose: onClose},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CalendarModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarModel extends _i1.Mock implements _i3.CalendarModel {
  MockCalendarModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set meditationsResponse(_i6.MeditationsResponse? _meditationsResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #meditationsResponse,
          _meditationsResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userResponse(_i7.UserResponse? _userResponse) => super.noSuchMethod(
        Invocation.setter(
          #userResponse,
          _userResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set weekCalendarResponse(_i8.WeekCalendarResponse? _weekCalendarResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #weekCalendarResponse,
          _weekCalendarResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set monthCalendarResponse(
          _i9.MonthCalendarResponse? _monthCalendarResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #monthCalendarResponse,
          _monthCalendarResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set yearCalendarResponse(_i10.YearCalendarResponse? _yearCalendarResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #yearCalendarResponse,
          _yearCalendarResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set weekCalendar(List<int>? _weekCalendar) => super.noSuchMethod(
        Invocation.setter(
          #weekCalendar,
          _weekCalendar,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set monthCalendar(List<int>? _monthCalendar) => super.noSuchMethod(
        Invocation.setter(
          #monthCalendar,
          _monthCalendar,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set yearCalendar(List<int>? _yearCalendar) => super.noSuchMethod(
        Invocation.setter(
          #yearCalendar,
          _yearCalendar,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set calendarType(_i3.CalendarType? _calendarType) => super.noSuchMethod(
        Invocation.setter(
          #calendarType,
          _calendarType,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CalendarRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarRepository extends _i1.Mock
    implements _i11.CalendarRepository {
  MockCalendarRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void sendOpenScreenEvent() => super.noSuchMethod(
        Invocation.method(
          #sendOpenScreenEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<(_i7.UserResponse?, _i13.CustomError?)> requestUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUser,
          [],
        ),
        returnValue: _i12.Future<(_i7.UserResponse?, _i13.CustomError?)>.value(
            (null, null)),
      ) as _i12.Future<(_i7.UserResponse?, _i13.CustomError?)>);

  @override
  _i12.Future<(_i6.MeditationsResponse?, _i13.CustomError?)>
      requestMeditations() => (super.noSuchMethod(
            Invocation.method(
              #requestMeditations,
              [],
            ),
            returnValue: _i12
                .Future<(_i6.MeditationsResponse?, _i13.CustomError?)>.value(
                (null, null)),
          ) as _i12.Future<(_i6.MeditationsResponse?, _i13.CustomError?)>);

  @override
  _i12.Future<_i13.CustomError?> uploadImageProfile(_i14.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImageProfile,
          [file],
        ),
        returnValue: _i12.Future<_i13.CustomError?>.value(),
      ) as _i12.Future<_i13.CustomError?>);

  @override
  _i12.Future<(_i8.WeekCalendarResponse?, _i13.CustomError?)>
      requestCalendarWeek(String? date) => (super.noSuchMethod(
            Invocation.method(
              #requestCalendarWeek,
              [date],
            ),
            returnValue: _i12
                .Future<(_i8.WeekCalendarResponse?, _i13.CustomError?)>.value(
                (null, null)),
          ) as _i12.Future<(_i8.WeekCalendarResponse?, _i13.CustomError?)>);

  @override
  _i12.Future<(_i9.MonthCalendarResponse?, _i13.CustomError?)>
      requestCalendarMonth(String? date) => (super.noSuchMethod(
            Invocation.method(
              #requestCalendarMonth,
              [date],
            ),
            returnValue: _i12
                .Future<(_i9.MonthCalendarResponse?, _i13.CustomError?)>.value(
                (null, null)),
          ) as _i12.Future<(_i9.MonthCalendarResponse?, _i13.CustomError?)>);

  @override
  _i12.Future<(_i10.YearCalendarResponse?, _i13.CustomError?)>
      requestCalendarYear(String? date) => (super.noSuchMethod(
            Invocation.method(
              #requestCalendarYear,
              [date],
            ),
            returnValue: _i12
                .Future<(_i10.YearCalendarResponse?, _i13.CustomError?)>.value(
                (null, null)),
          ) as _i12.Future<(_i10.YearCalendarResponse?, _i13.CustomError?)>);

  @override
  _i12.Future<(String?, _i13.CustomError?)> getTokenApi() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTokenApi,
          [],
        ),
        returnValue:
            _i12.Future<(String?, _i13.CustomError?)>.value((null, null)),
      ) as _i12.Future<(String?, _i13.CustomError?)>);
}
