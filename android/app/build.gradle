plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
            applicationId "eumedito.org.cinco_minutos.dev"
            resValue "string", "app_name", "Dev"
            namespace "eumedito.org.cinco_minutos_meditacao.dev"
        }
        prod {
            dimension "flavor-type"
            applicationId "eumedito.org.cinco_minutos"
            resValue "string", "app_name", "5 Minutos"
            namespace "eumedito.org.cinco_minutos_meditacao"
        }
        store {
            dimension "flavor-type"
            applicationId "com.polvo.cincominutos"
            resValue "string", "app_name", "5 Minutos"
            namespace "com.polvo.cincominutos_meditacao"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

    compileSdkVersion 34
    buildToolsVersion "34.0.0"
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file(getEnvVar("ANDROID_STORE_FILE", localProperties['storeFile']))
            storePassword getEnvVar("ANDROID_STORE_PASSWORD", localProperties['storePassword'])
            keyAlias getEnvVar("ANDROID_KEY_ALIAS", localProperties['keyAlias'])
            keyPassword getEnvVar("ANDROID_KEY_PASSWORD", localProperties['keyPassword'])
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}